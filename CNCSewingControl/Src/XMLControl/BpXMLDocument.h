//===================================================================================================
// Summary:
//		XML的document节点
// Usage:
//		得到IBpXMLNode指针后可进行XPath操作、保存XML操作、创建节点等
// Remarks:
//		注意返回指针的释放
//		释放IBpXMLNode指针、IBpXMLNode指针并不会影响DOM树的结构
// Date:
//		2008-12-3
// Author:
//		Yang Xuefeng (yang_xuefeng@founder.com.cn)
//===================================================================================================

#ifndef __Bp_XMLCodec_Export_XMLDocument__
#define __Bp_XMLCodec_Export_XMLDocument__

//===================================================================================================

class IBpXMLNode;

//===================================================================================================

class IBpXMLDocument
{
public:
	//------------------------------------------------------------------------------------------------
	// Summary:
	// 		打开XML文件，建立DOM树，返回Document节点
	// Parameters:
	//		[in] strFilePath - XML文件的完整路径
	//------------------------------------------------------------------------------------------------
	virtual bool OpenXMLForDocument(const wchar_t *szFilePath) = 0;

	//------------------------------------------------------------------------------------------------
	// Summary:
	// 		给定根元素名字，创建Document节点
	// Parameters:
	//		[in] strRootElementName - 将要创建的根元素名称
	//------------------------------------------------------------------------------------------------
	virtual bool CreateDocument(const wchar_t *szRootElementName) = 0;	

	//------------------------------------------------------------------------------------------------
	// Summary:
	//		将DOM Tree写入文件
	// Parameters:
	//		[in] strFile - 文件的完整路径
	//		[in] nEncodingType - 文件的保存类型
	//------------------------------------------------------------------------------------------------
	virtual bool SaveXML(const wchar_t *szFilePath) const = 0;

	//------------------------------------------------------------------------------------------------
	// Summary:
	// 		仅释放由CreateDocument创建所分配的资源
	//------------------------------------------------------------------------------------------------
	virtual bool Release() = 0;

public:
	//------------------------------------------------------------------------------------------------
	// Summary:
	//		创建一个Element节点
	// Parameters:
	//		[in] strElementNodeName - 被创建节点名
	// Remarks:
	//		返回的IBpXMLNode指针需要释放
	//------------------------------------------------------------------------------------------------	
	virtual IBpXMLNode* CreateElementNode(const wchar_t *szElementNodeName) = 0;

	//------------------------------------------------------------------------------------------------
	// Summary:
	//		创建一个Text节点
	// Parameters:
	//		[in] strText - 创建的Text节点的内容
	// Remarks:
	//		返回的IBpXMLNode指针需要释放
	//------------------------------------------------------------------------------------------------	
	virtual IBpXMLNode* CreateTextNode(const wchar_t *szText) = 0;

	//------------------------------------------------------------------------------------------------
	// Summary:
	//		获取根元素
	// Parameters:
	//		[out] nodeRootElement - 返回的根元素
	//------------------------------------------------------------------------------------------------
	virtual IBpXMLNode* GetRootElement() = 0;

public:
	//------------------------------------------------------------------------------------------------
	// Summary:
	// 		获取最后一个错误信息。
	//------------------------------------------------------------------------------------------------
	virtual int GetLastError() const  = 0;
};

//===================================================================================================

#endif	// #ifndef	__XMLDOCUMENT_HEADERFILE__